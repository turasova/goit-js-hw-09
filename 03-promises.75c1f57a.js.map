{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAI,C,SAAEH,E,MAAUC,IAEhBG,EAAI,C,SAAEJ,E,MAAUC,GAAQ,GAEzBA,EAAM,G,EAMA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,SAE3B,SAA4BC,GAE1BA,EAAIC,iBAEJ,MAAQb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAClD,IAAIC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCL,GAAcG,EAEhBxB,EAAc0B,EAAGL,GAChBM,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAEzE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClB0B,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoB/B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nfunction createPromise(position, delay) {\n\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n\n  })\n\n}\n\nconst refs = {\n  form: document.querySelector('.form'), \n}\n\nrefs.form.addEventListener('click', handlerClickCreate);\n\nfunction handlerClickCreate(evt) {\n\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 1; i <= inputAmount; i += 1) {\n    inputDelay += inputStep;\n\n  createPromise(i, inputDelay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n  }\n\n}\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","inputDelay","Number","value","inputStep","inputAmount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.75c1f57a.js.map"}